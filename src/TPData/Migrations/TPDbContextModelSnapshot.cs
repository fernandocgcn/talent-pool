// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TPData;

namespace TPData.Migrations
{
    [DbContext(typeof(TPDbContext))]
    partial class TPDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TPDomain.Models.Availability", b =>
                {
                    b.Property<int>("AvailabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ava_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("ava_description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AvailabilityId");

                    b.ToTable("tb_availability");
                });

            modelBuilder.Entity("TPDomain.Models.Developer", b =>
                {
                    b.Property<int>("DeveloperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dev_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("dev_city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrudLink")
                        .HasColumnName("dev_crud_link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("dev_email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExtraKnowledge")
                        .HasColumnName("dev_extra_knowledge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedIn")
                        .HasColumnName("dev_linkedin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("dev_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portfolio")
                        .HasColumnName("dev_portfolio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnName("dev_salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Skype")
                        .IsRequired()
                        .HasColumnName("dev_skype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("dev_state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasColumnName("dev_whatsapp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeveloperId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tb_developer");
                });

            modelBuilder.Entity("TPDomain.Models.DeveloperAvailability", b =>
                {
                    b.Property<int>("dev_id")
                        .HasColumnType("int");

                    b.Property<int>("ava_id")
                        .HasColumnType("int");

                    b.HasKey("dev_id", "ava_id");

                    b.HasIndex("ava_id");

                    b.ToTable("tb_developer_availability");
                });

            modelBuilder.Entity("TPDomain.Models.DeveloperKnowledge", b =>
                {
                    b.Property<int>("DeveloperKnowledgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dek_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("Rate")
                        .HasColumnName("dek_rate")
                        .HasColumnType("smallint");

                    b.Property<int>("dev_id")
                        .HasColumnType("int");

                    b.Property<int>("kno_id")
                        .HasColumnType("int");

                    b.HasKey("DeveloperKnowledgeId");

                    b.HasIndex("kno_id");

                    b.HasIndex("dev_id", "kno_id")
                        .IsUnique();

                    b.ToTable("tb_developer_knowledge");
                });

            modelBuilder.Entity("TPDomain.Models.DeveloperWorkingTime", b =>
                {
                    b.Property<int>("dev_id")
                        .HasColumnType("int");

                    b.Property<int>("wot_id")
                        .HasColumnType("int");

                    b.HasKey("dev_id", "wot_id");

                    b.HasIndex("wot_id");

                    b.ToTable("tb_developer_working_time");
                });

            modelBuilder.Entity("TPDomain.Models.Knowledge", b =>
                {
                    b.Property<int>("KnowledgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("kno_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("kno_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KnowledgeId");

                    b.ToTable("tb_knowledge");
                });

            modelBuilder.Entity("TPDomain.Models.WorkingTime", b =>
                {
                    b.Property<int>("WorkingTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("wot_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("wot_description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkingTimeId");

                    b.ToTable("tb_working_time");
                });

            modelBuilder.Entity("TPDomain.Models.DeveloperAvailability", b =>
                {
                    b.HasOne("TPDomain.Models.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("ava_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TPDomain.Models.Developer", "Developer")
                        .WithMany()
                        .HasForeignKey("dev_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TPDomain.Models.DeveloperKnowledge", b =>
                {
                    b.HasOne("TPDomain.Models.Developer", "Developer")
                        .WithMany()
                        .HasForeignKey("dev_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TPDomain.Models.Knowledge", "Knowledge")
                        .WithMany()
                        .HasForeignKey("kno_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TPDomain.Models.DeveloperWorkingTime", b =>
                {
                    b.HasOne("TPDomain.Models.Developer", "Developer")
                        .WithMany()
                        .HasForeignKey("dev_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TPDomain.Models.WorkingTime", "WorkingTime")
                        .WithMany()
                        .HasForeignKey("wot_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
